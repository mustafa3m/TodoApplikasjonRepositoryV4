// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TodoApplikasjonAPIEntityDelTre.Data;

#nullable disable

namespace TodoApplikasjonAPIEntityDelTre.Migrations
{
    [DbContext(typeof(TodoDbContext))]
    [Migration("20241211002139_UpdateCategoryModel")]
    partial class UpdateCategoryModel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("TodoApplikasjonAPIEntityDelTre.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Health"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Leisure"
                        });
                });

            modelBuilder.Entity("TodoApplikasjonAPIEntityDelTre.Models.Todo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(2147483647)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Todos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "Call the clinic and book a time for the dental check-up",
                            IsCompleted = false,
                            Title = "Schedule dentist appointment"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Description = "Research trails and prepare gear for a Saturday hike",
                            IsCompleted = true,
                            Title = "Plan weekend hike"
                        });
                });

            modelBuilder.Entity("TodoApplikasjonAPIEntityDelTre.Models.Todo", b =>
                {
                    b.HasOne("TodoApplikasjonAPIEntityDelTre.Models.Category", "Category")
                        .WithMany("Todos")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("TodoApplikasjonAPIEntityDelTre.Models.Category", b =>
                {
                    b.Navigation("Todos");
                });
#pragma warning restore 612, 618
        }
    }
}
